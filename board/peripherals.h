/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_dma.h"
#include "fsl_common.h"
#include "fsl_spi.h"
#include "fsl_spi_dma.h"
#include "fsl_flexspi.h"
#include "fsl_flexspi_dma.h"
#include "fsl_clock.h"
#include "fsl_usart.h"
#include "fsl_usart_freertos.h"
#include "fsl_i2c.h"
#include "fsl_i2c_freertos.h"
#include "fsl_pint.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Used DMA device. */
#define DMA0_DMA_BASEADDR DMA0
/* BOARD_InitPeripherals defines for FLEXCOMM0 */
/* Definition of peripheral ID */
#define FLEXCOMM0_EEG_SPI_PERIPHERAL ((SPI_Type *)FLEXCOMM0)
/* Definition of the clock source frequency */
#define FLEXCOMM0_EEG_SPI_CLOCK_SOURCE 16000000UL
/* Selected DMA channel number. */
#define FLEXCOMM0_EEG_SPI_RX_DMA_CHANNEL 0
/* Used DMA device. */
#define FLEXCOMM0_EEG_SPI_RX_DMA_BASEADDR DMA0
/* Selected DMA channel number. */
#define FLEXCOMM0_EEG_SPI_TX_DMA_CHANNEL 1
/* Used DMA device. */
#define FLEXCOMM0_EEG_SPI_TX_DMA_BASEADDR DMA0
/* Definition of peripheral ID */
#define FLEXSPI_PERIPHERAL FLEXSPI
/* Size of LUT (Look-up Table) */
#define FLEXSPI_LUT_LENGTH 64
/* Selected DMA channel number. */
#define FLEXSPI_TX_DMA_CHANNEL 29
/* Used DMA device. */
#define FLEXSPI_TX_DMA_BASEADDR DMA0
/* Selected DMA channel number. */
#define FLEXSPI_RX_DMA_CHANNEL 28
/* Used DMA device. */
#define FLEXSPI_RX_DMA_BASEADDR DMA0
/* Definition of peripheral ID */
#define FLEXCOMM1_BLE_UART_PERIPHERAL ((USART_Type *)FLEXCOMM1)
/* Definition of the clock source frequency */
#define FLEXCOMM1_BLE_UART_CLOCK_SOURCE 16000000UL
/* Definition of the backround buffer size */
#define FLEXCOMM1_BLE_UART_BACKGROUND_BUFFER_SIZE 1
/* FLEXCOMM1_BLE_UART interrupt vector ID (number). */
#define FLEXCOMM1_BLE_UART_IRQN FLEXCOMM1_IRQn
/* BOARD_InitPeripherals defines for FLEXCOMM2 */
/* Definition of peripheral ID */
#define FLEXCOMM2_BATT_I2C_PERIPHERAL ((I2C_Type *)FLEXCOMM2)
/* Definition of the clock source frequency */
#define FLEXCOMM2_BATT_I2C_CLOCK_SOURCE 16000000UL
/* FLEXCOMM2_BATT_I2C interrupt vector ID (number). */
#define FLEXCOMM2_BATT_I2C_FLEXCOMM_IRQN FLEXCOMM2_IRQn
/* BOARD_InitPeripherals defines for FLEXCOMM3 */
/* Definition of peripheral ID */
#define FLEXCOMM3_SENSOR_I2C_PERIPHERAL ((I2C_Type *)FLEXCOMM3)
/* Definition of the clock source frequency */
#define FLEXCOMM3_SENSOR_I2C_CLOCK_SOURCE 16000000UL
/* FLEXCOMM3_SENSOR_I2C interrupt vector ID (number). */
#define FLEXCOMM3_SENSOR_I2C_FLEXCOMM_IRQN FLEXCOMM3_IRQn
/* Definition of peripheral ID */
#define FLEXCOMM5_DEBUG_UART_PERIPHERAL ((USART_Type *)FLEXCOMM5)
/* Definition of the clock source frequency */
#define FLEXCOMM5_DEBUG_UART_CLOCK_SOURCE 16000000UL
/* Definition of the backround buffer size */
#define FLEXCOMM5_DEBUG_UART_BACKGROUND_BUFFER_SIZE 1
/* FLEXCOMM5_DEBUG_UART interrupt vector ID (number). */
#define FLEXCOMM5_DEBUG_UART_IRQN FLEXCOMM5_IRQn
/* BOARD_InitPeripherals defines for PINT */
/* Definition of peripheral ID */
#define PINT_PERIPHERAL ((PINT_Type *) PINT_BASE)
/* Definition of PINT interrupt ID for interrupt 0  */
#define PINT_INT_0 kPINT_PinInt0
/* Definition of PINT interrupt ID for interrupt 1  */
#define PINT_INT_1 kPINT_PinInt1
/* Definition of PINT interrupt ID for interrupt 2  */
#define PINT_INT_2 kPINT_PinInt2
/* Definition of PINT interrupt ID for interrupt 3  */
#define PINT_INT_3 kPINT_PinInt3
/* Definition of PINT interrupt ID for interrupt 4  */
#define PINT_INT_4 kPINT_PinInt4
/* Definition of PINT interrupt ID for interrupt 5  */
#define PINT_INT_5 kPINT_PinInt5
/* Definition of PINT interrupt ID for interrupt 6  */
#define PINT_INT_6 kPINT_PinInt6

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const spi_master_config_t FLEXCOMM0_EEG_SPI_config;
extern dma_handle_t FLEXCOMM0_EEG_SPI_RX_Handle;
extern dma_handle_t FLEXCOMM0_EEG_SPI_TX_Handle;
extern spi_dma_handle_t FLEXCOMM0_EEG_SPI_DMA_Handle;
extern const flexspi_config_t FLEXSPI_config;
extern const uint32_t FLEXSPI_LUT[FLEXSPI_LUT_LENGTH];
extern dma_handle_t FLEXSPI_RX_Handle;
extern dma_handle_t FLEXSPI_TX_Handle;
extern flexspi_dma_handle_t FLEXSPI_DMA_Handle;
extern usart_rtos_handle_t FLEXCOMM1_BLE_UART_rtos_handle;
extern usart_handle_t FLEXCOMM1_BLE_UART_usart_handle;
extern struct rtos_usart_config FLEXCOMM1_BLE_UART_rtos_config;
extern i2c_rtos_handle_t FLEXCOMM2_BATT_I2C_rtosHandle;
extern const i2c_master_config_t FLEXCOMM2_BATT_I2C_config;
extern i2c_rtos_handle_t FLEXCOMM3_SENSOR_I2C_rtosHandle;
extern const i2c_master_config_t FLEXCOMM3_SENSOR_I2C_config;
extern usart_rtos_handle_t FLEXCOMM5_DEBUG_UART_rtos_handle;
extern usart_handle_t FLEXCOMM5_DEBUG_UART_usart_handle;
extern struct rtos_usart_config FLEXCOMM5_DEBUG_UART_rtos_config;

/***********************************************************************************************************************
 * Callback functions
 **********************************************************************************************************************/
/* INT_3 callback function for the PINT component */
extern void hrm_pint_isr(pint_pin_int_t pintr, uint32_t pmatch_status);

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
